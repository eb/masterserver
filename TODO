Coming up next:
- rework lib{q2,h2} packet assembly code
- implement libq3 parser in lib{q2,h2} for player info etc.
- maybe rework the socket/interface binding code
- set vim modelines? /* vim:sw=4:ts=4: */
- cleanup libqw
- docs/PROTOCOLS: add stef1 packets
- write test suite
- libq3: recover from realloc() error

Near future:
- implement some anti spamming/DoS or throttling system to prevent DoS attacks
- implement stub functions for protocols other than udp
- ascii version of docs/masterserver_thread_system.dia
- signal handler
- specify as which user masterserver should run
- Damn UT is using TCP for communication with master server.
  Allow plugins to use protocols other than UDP for communication.
- autotools + FreeBSD support
- process packets in parallel
- add more qw/q2/q3 based games
- docs/PROTOCOLS: check which options the stef1 master honors in getservers
- "The Sega.Net master server address is: "master.id-q3a.games.sega.net: 27950"
- check out the "populated=1" string gamespy3d sends to q2 master
- test plugins with server browsers other than qstat/xqf

More or less far future:
- Support for other games:
	check tasks at http://sf.net/projects/lasange-system
- Stats
- admin commands/interface via network
	- ability to load/unload plugins on-the-fly
- libq3: implement "getKeyAuthorize"
- libq3: implement player statistics(?)
- include a database interface in masterserver
  (the one from devil)
- use writev() or something different for sending out packets ?

Last modified: 2004-04-26 by Andre' Schulz

