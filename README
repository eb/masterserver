masterserver v0.3
-----------------

1. Introduction
2. Goals
3. Installation
4. Misc


1. Introduction
---------------

masterserver is an attempt at writing a generic master server for game servers.
masterserver is easily extendable via plugins written in C.
Currently, there are plugins for Quake2/3 and Heretic2. I've tested
masterserver on Linux 2.4.19 with glibc 2.3.2 (with linuxthreads) and gcc 3.3.2.
It should compile without problems on other Linux systems.

The name might change, any suggestions are welcome.

Beware!: This is alpha quality. So it might crash 'n' burn.
Contributions and suggestions are very welcome.


2. Goals
--------

- generic master server
- easy to extend via plugins
- document the network protocols of the supported games
- admin interface via console and tcp/ip
- ...


3. Installation
---------------

Note:
	masterserver currently compiles only on Linux systems. I'm trying to make
	it run on other unices, too, but that will take some time because of my
	lack of experience.

Note on Q3 plugin:
	The new Q3 plugin understands and processes motd packets. The default motd
	is "Insert MOTD here.". If you want to change the motd then you have to
	edit plugins/libq3.c. At the beginning of the file there's a line which
	reads: #define Q3M_MOTD "Insert MOTD here."
	Just replace "Insert MOTD here." with your own motd, recompile the Q3
	plugin and enjoy.

Note on Q2/H2 plugins:
	They're very similar because Heretic2 is based on the Q2 engine. Both
	plugins haven't had much testing. So far I made sure that they write
	servers into their server list and correctly send it out when requested.


The usual "make; make install".

make
make install (as root)

Now, you're ready to go.

By default the plugins are installed in "/usr/lib/lasange/masterserver" and the
binary is installed in "/usr/bin". If that isn't to your liking you can change
the destinations in the Makefile.

masterserver can be started as any user. (preferably as a non privileged user)
It also has the ability to bind to specific interfaces. If you want to do that
masterserver needs to be root. After masterserver has created and bound the
sockets to the interface(s) it drops the root privileges and sets its uid to
"masterserver". So you have to create a new user named "masterserver", if you
want to bind it to (a) specific interface(s).

In the Makefile there are 2 other targets, named "masterserver" and "plugins", to either
compile only the masterserver or only the plugins.

There is no configuration file.
By default masterserver reads all files in the MASTERSERVER_LIB_DIR,
which is defined in masterserver.h/Makefile and opens all files as shared
objects. Or you can specify a different directory via the -p command line
switch. MASTERSERVER_LIB_DIR defaults to "/usr/lib/lasange/masterserver".

Btw, to uninstall masterserver, run "make uninstall". (as root)


4. Misc
-------

Thanks to:
iptables team for their source code from which I've learned how to use 
shared objects. <http://www.netfilter.org>

Ingo Rohlfs <irohlfs@irohlfs.de> for suggestions on the thread system and the
nightly debugging sessions.

Viktor Vasilev aka shr1k3 <shr1k3@gmx.at>
	Suggestions and code auditing
	Logging code

qstat team and their source code <http://www.qstat.org>


Last modified: 2003-10-25 by Andre' Schulz
