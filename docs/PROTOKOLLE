Dieses Dokument beschreibt die Netzwerk Protokolle, welche von Master Servern
benutzt werden.

Das Dokument ist leider noch etwas chaotisch und definitiv unvollständig.
 

1. Quake3 Protokoll
	1.1. Master Server
		1.1.1. getservers
		1.1.2. getserversResponse
		1.1.3. getKeyAuthorize
		1.1.4. getmotd
	1.2. Dedicated/Listen Server
		1.2.1. getinfo
		1.2.2. infoResponse
		1.2.3. getstatus
		1.2.4. statusResponse
		1.2.5. getchallenge
		1.2.6. challengeResponse
		1.2.7. connect
		1.2.8. connectResponse
		1.2.9. heartbeat
		1.2.10 print

2. Heretic2 Protokoll
	2.1. heartbeat
	2.2. query
	2.3. shutdown
	2.4. status
	2.5. print
	2.6. info
	2.7. info
	2.8. getchallenge
	2.9. challenge
	2.10. connect
	2.11. client_connect
	2.12. servers
	2.13. ping
	2.14. ack

3. Quake2 Protokoll
	3.1. heartbeat
	3.2. query
	3.3. shutdown
	3.4. status
	3.5. print
	3.6. info
	3.7. info
	3.8. getchallenge
	3.9. challenge
	3.10. connect
	3.11. client_connect
	3.12. servers
	3.13. ping
	3.14. ack

4. STV: Elite Force Protokoll
	4.1. Master Server
		4.1.1. getservers
		4.1.2. getserversResponse
		4.1.3. getKeyAuthorize
		4.1.4. getmotd
	4.2. Dedicated/Listen Server
		4.2.1. getinfo
		4.2.2. infoResponse
		4.2.3. getstatus
		4.2.4. statusResponse
		4.2.5. getchallenge
		4.2.6. challengeResponse
		4.2.7. connect
		4.2.8. connectResponse
		4.2.9. heartbeat
		4.2.10 print
		4.2.11 heartstop

5. Unreal Tournament Protokoll
	5.1. heartbeat
	5.2. info
	5.3. status
	5.4. REPORTQUERY
	5.5. HTTP Traffic
	5.6. Master Server Traffic

6. QuakeWorld Protokoll

7. Links

--

1. Quake3 Protokoll
=========================

Q3 Server port: UDP 27960
Q3 Master DNS name: master.quake3arena.com
Q3 Master port: UDP 27950
Q3 MOTD DNS name: update.quake3arena.com
Q3 MOTD server port: UDP 27951
Q3 auth server DNS name: authorize.quake3arena.com
Q3 auth server port: UDP 27952

Protokoll Marker: 0xff 0xff 0xff 0xff


1.1. Master Server
------------------

1.1.1. getservers
-----------------
(Client -> Master)

0000  ff ff ff ff 67 65 74 73 65 72 76 65 72 73 20 36   ÿÿÿÿgetservers 6
0010  36 20 65 6d 70 74 79 20 66 75 6c 6c 20 64 65 6d   6 empty full dem
0020  6f 0a                                             o.    

getservers		- Befehl
66				- Protokollversion
					Q3 1.30 == 66
					Q3 1.31 == 67
					Q3 1.32	== 68
empty full demo	- Welche Server angezeigt werden sollen. Kann auch weggelassen
				  werden um server zu bekommen, die weder voll noch leer sind.
Folgende Schlüsselwörter sind mir bekannt:
	empty - leere Server (keine Playerslots belegt)
	full - volle Server (alle Playerslots belegt, bis auf die private Slots)
	demo - Demo Server
	ffa - Free For All Server
	team - Team Deathmatch
	tourney - Tournament (1v1) Server
	ctf - Capture the Flag Server

Nach einigen Tests habe ich herausgefunden, dass zumindest die Protokoll-
version vom ID Q3 Master verarbeitet wird. D.h. der Master gibt eine
Serverliste zurück, welche nur Server mit "protocol" 66 enthält.
getservers Pakete werden an master.quake3arena.com:27950 geschickt.


1.1.2. getserversResponse
-------------------------

0000  ff ff ff ff 67 65 74 73 65 72 76 65 72 73 52 65   ÿÿÿÿgetserversRe
0010  73 70 6f 6e 73 65 5c d9 d3 f8 cc fb e7 5c 18 f3   sponse\ÙÓøÌûç\.ó
0020  b2 d2 6d 38 5c 51 62 7f cd 6d 38 5c cb d9 3f fa   ²Òm8\Qb.Ím8\ËÙ?ú
0030  e3 00 5c 18 30 ad b3 6d 38 5c 44 44 97 a2 6d 38   ã.\.0­³m8\DD.¢m8
0040  5c 18 a4 31 01 6d 38 5c c3 e6 b3 55 6d 38 5c d9   \.¤1.m8\Ãæ³Um8\Ù
0050  24 72 82 4e bd 5c 45 4f 54                        $r.N½\EOT

getserversResponse ist die Antwort des Masters auf ein "getservers" Paket.
Nach "getserversResponse" folgen die Server in 6 byte Blöcken:
	- 4 byte für IP Adresse
	- 2 byte für Port

Die Blöcke sind durch "\" (0x5c) getrennt.
"\EOT" markiert das Ende des Pakets.
Der Master Server gibt mehrere UDP Pakete zurück, falls nicht alle Server
in einem Paket geschickt werden können. Die Pakete vom ID Master sind
max. 810 Byte gross. (UDP Header nicht eingerechnet.)
Das entspricht 112 Servern pro Paket.


1.1.3. getKeyAuthorize
----------------------
(Client -> Master)

0000  ff ff ff ff 67 65 74 4b 65 79 41 75 74 68 6f 72   ÿÿÿÿgetKeyAuthor
0010  69 7a 65 20 30 20 78 78 78 78 78 78 78 78 78 78   ize 0 xxxxxxxxxx
0020  78 78 78 78 78 78                                 xxxxxx

Der Key besteht aus 16 Zeichen der Form [A-Za-z0-9].

Bemerkung:
ID's Master Server antwortet auf getKeyAuthorize nicht mehr.
Die Key Abfrage wurde seitens ID wohl abgeschaltet.
Angeblich soll die Key Abfrage wieder eingeschaltet worden sein, wegen
Punkbuster.
getKeyAuthorize Pakete werden an authorize.quake3arena.com:27952 UDP geschickt.


1.1.4. getmotd
--------------
(Client -> Master)

0000  ff ff ff ff 67 65 74 6d 6f 74 64 20 22 5c 76 65   ÿÿÿÿgetmotd "\ve
0010  72 73 69 6f 6e 5c 51 33 20 31 2e 33 32 62 20 6c   rsion\Q3 1.32b l
0020  69 6e 75 78 2d 69 33 38 36 20 4e 6f 76 20 31 34   inux-i386 Nov 14
0030  20 32 30 30 32 5c 72 65 6e 64 65 72 65 72 5c 47    2002\renderer\G
0040  65 46 6f 72 63 65 33 2f 41 47 50 2f 53 53 45 5c   eForce3/AGP/SSE\
0050  63 68 61 6c 6c 65 6e 67 65 5c 32 31 31 30 35 34   challenge\211054
0060  38 39 37 36 22 0a                                 8976".

Q3 übergibt standardmässig die Variablen version, renderer und challenge.

Bemerkung:
Der Q3 Client schickt das motd Paket an Port 27951, auf welchem kein Programm
horcht. Man kriegt nur ein ICMP Destination Unreachable.
getmotd Pakete werden an update.quake3arena.com:27951 UDP geschickt.


1.1.5. motd
-----------
(Master -> Client)

0000  ff ff ff ff 6d 6f 74 64 20 22 63 68 61 6c 6c 65   ÿÿÿÿmotd "challe
0010  6e 67 65 5c 38 32 32 32 38 33 31 36 38 5c 6d 6f   nge\822283168\mo
0020  74 64 5c 46 75 6c 6c 20 76 65 72 73 69 6f 6e 20   td\Full version 
0030  6e 6f 77 20 61 76 61 69 6c 61 62 6c 65 20 66 6f   now available fo
0040  72 20 64 6f 77 6e 6c 6f 61 64 21 21 5c 22         r download!!\"

motd Antwort von RtCW: Enemy Territory.
Sollte aber identisch mit Q3 sein.
Der Challenge Wert wird aus dem getmotd Paket geparst.


1.2. Dedicated/Listen Server
----------------------------

1.2.1. getinfo
--------------
(Client -> Server)

0000  ff ff ff ff 67 65 74 69 6e 66 6f 0a               ÿÿÿÿgetinfo.

Keine Parameter bekannt.


1.2.2. infoResponse
-------------------

0000  ff ff ff ff 69 6e 66 6f 52 65 73 70 6f 6e 73 65   ÿÿÿÿinfoResponse
0010  0a 5c 70 75 6e 6b 62 75 73 74 65 72 5c 30 5c 70   .\punkbuster\0\p
0020  75 72 65 5c 30 5c 67 61 6d 65 74 79 70 65 5c 30   ure\0\gametype\0
0030  5c 73 76 5f 6d 61 78 63 6c 69 65 6e 74 73 5c 31   \sv_maxclients\1
0040  35 5c 63 6c 69 65 6e 74 73 5c 30 5c 6d 61 70 6e   5\clients\0\mapn
0050  61 6d 65 5c 6d 6b 73 70 61 63 65 64 6d 30 33 5c   ame\mkspacedm03\
0060  68 6f 73 74 6e 61 6d 65 5c 53 70 79 72 6f 73 20   hostname\Spyros 
0070  4c 61 69 72 5c 70 72 6f 74 6f 63 6f 6c 5c 36 38   Lair\protocol\68

Zum Vergleich ein 1.30 dedicated Server der baseq3 fährt:

0000  ff ff ff ff 69 6e 66 6f 52 65 73 70 6f 6e 73 65   ÿÿÿÿinfoResponse
0010  0a 5c 73 76 5f 61 6c 6c 6f 77 41 6e 6f 6e 79 6d   .\sv_allowAnonym
0020  6f 75 73 5c 30 5c 70 75 72 65 5c 31 5c 67 61 6d   ous\0\pure\1\gam
0030  65 74 79 70 65 5c 34 5c 73 76 5f 6d 61 78 63 6c   etype\4\sv_maxcl
0040  69 65 6e 74 73 5c 31 32 5c 63 6c 69 65 6e 74 73   ients\12\clients
0050  5c 31 32 5c 6d 61 70 6e 61 6d 65 5c 71 33 63 74   \12\mapname\q3ct
0060  66 33 5c 68 6f 73 74 6e 61 6d 65 5c 44 65 6d 6f   f3\hostname\Demo
0070  6e 20 55 4b 20 51 75 61 6b 65 33 20 43 54 46 20   n UK Quake3 CTF 
0080  28 31 29 5c 70 72 6f 74 6f 63 6f 6c 5c 36 36      (1)\protocol\66


"infoResponse" ist die Antwort des Servers auf ein "getinfo" Paket.
Ab "infoResponse" gibt der Server zuerst die Konsolen Variable und dann
deren Wert auf dem Server zurück. Trennzeichen ist "\".

Bemerkung:
Der Server gibt bei getinfo/infoResponse nur wenige Variablen zurück:
punkbuster
pure
gametype
sv_maxclients
clients
mapname
hostname
protocol

Der 1.30 Server gibt dazu noch "sv_allowAnonymous" aus, exklusive "punkbuster".

Um andere Server in einem _nicht_ gerouteten LAN zu finden, schickt Q3 ein
"getinfo" Paket nach 255.255.255.255:[27960-27963].
Die Server antworten dann und schon hat man eine Liste der Server im Netzwerk.

getinfo wird vieleicht vom Master Server benutzt um festzustellen,
ob ein Server voll, leer oder belegt ist, um die getservers Anfrage von 
Clients richtig zu beantworten.


1.2.3. getstatus
--------------
(Client -> Server)

0000  ff ff ff ff 67 65 74 73 74 61 74 75 73 0a         ÿÿÿÿgetstatus.

0000  ff ff ff ff 67 65	74 73 74 61 74 75 73 20 30 31   ÿÿÿÿgetstatus 10
0010  36 31 38 32 39 35 34 37 37 32 33                  61829547723

getstatus ist eine ausführlichere Version von getinfo und wird vom Masterserver
nach jedem heartbeat geschickt.
Optionaler Parameter ist ein challenge Wert. Der Parameter wird meines Wissens
nur vom Masterserver benutzt.


1.2.4. statusResponse
---------------------

Leerer baseq3 1.32 Server:

0000  ff ff ff ff 73 74 61 74 75 73 52 65 73 70 6f 6e   ÿÿÿÿstatusRespon
0010  73 65 0a 5c 73 76 5f 70 75 6e 6b 62 75 73 74 65   se.\sv_punkbuste
0020  72 5c 30 5c 63 61 70 74 75 72 65 6c 69 6d 69 74   r\0\capturelimit
0030  5c 38 5c 67 5f 6d 61 78 47 61 6d 65 43 6c 69 65   \8\g_maxGameClie
0040  6e 74 73 5c 30 5c 73 76 5f 6d 61 78 63 6c 69 65   nts\0\sv_maxclie
0050  6e 74 73 5c 31 35 5c 74 69 6d 65 6c 69 6d 69 74   nts\15\timelimit
0060  5c 32 30 5c 66 72 61 67 6c 69 6d 69 74 5c 32 30   \20\fraglimit\20
0070  5c 64 6d 66 6c 61 67 73 5c 30 5c 73 76 5f 68 6f   \dmflags\0\sv_ho
0080  73 74 6e 61 6d 65 5c 53 70 79 72 6f 73 20 4c 61   stname\Spyros La
0090  69 72 5c 73 76 5f 6d 61 78 52 61 74 65 5c 38 30   ir\sv_maxRate\80
00a0  30 30 5c 73 76 5f 6d 69 6e 50 69 6e 67 5c 30 5c   00\sv_minPing\0\
00b0  73 76 5f 6d 61 78 50 69 6e 67 5c 30 5c 73 76 5f   sv_maxPing\0\sv_
00c0  66 6c 6f 6f 64 50 72 6f 74 65 63 74 5c 31 5c 76   floodProtect\1\v
00d0  65 72 73 69 6f 6e 5c 51 33 20 31 2e 33 32 20 6c   ersion\Q3 1.32 l
00e0  69 6e 75 78 2d 69 33 38 36 20 4f 63 74 20 20 37   inux-i386 Oct  7
00f0  20 32 30 30 32 5c 67 5f 67 61 6d 65 74 79 70 65    2002\g_gametype
0100  5c 30 5c 70 72 6f 74 6f 63 6f 6c 5c 36 38 5c 6d   \0\protocol\68\m
0110  61 70 6e 61 6d 65 5c 6d 6b 73 70 61 63 65 64 6d   apname\mkspacedm
0120  30 33 5c 73 76 5f 70 72 69 76 61 74 65 43 6c 69   03\sv_privateCli
0130  65 6e 74 73 5c 30 5c 73 76 5f 61 6c 6c 6f 77 44   ents\0\sv_allowD
0140  6f 77 6e 6c 6f 61 64 5c 30 5c 62 6f 74 5f 6d 69   ownload\0\bot_mi
0150  6e 70 6c 61 79 65 72 73 5c 30 5c 67 61 6d 65 6e   nplayers\0\gamen
0160  61 6d 65 5c 62 61 73 65 71 33 5c 67 5f 6e 65 65   ame\baseq3\g_nee
0170  64 70 61 73 73 5c 30 0a                           dpass\0.

Hier zum Vergleich ein baseq3 1.30 Server mit 8 Spielern:

0000  ff ff ff ff 73 74 61 74 75 73 52 65 73 70 6f 6e   ÿÿÿÿstatusRespon
0010  73 65 0a 5c 76 65 72 73 69 6f 6e 5c 51 33 20 31   se.\version\Q3 1
0020  2e 33 30 20 6c 69 6e 75 78 2d 69 33 38 36 20 53   .30 linux-i386 S
0030  65 70 20 32 37 20 32 30 30 31 5c 64 6d 66 6c 61   ep 27 2001\dmfla
0040  67 73 5c 30 5c 66 72 61 67 6c 69 6d 69 74 5c 30   gs\0\fraglimit\0
0050  30 5c 74 69 6d 65 6c 69 6d 69 74 5c 31 35 5c 67   0\timelimit\15\g
0060  5f 67 61 6d 65 74 79 70 65 5c 30 5c 70 72 6f 74   _gametype\0\prot
0070  6f 63 6f 6c 5c 36 36 5c 6d 61 70 6e 61 6d 65 5c   ocol\66\mapname\
0080  71 33 64 6d 36 5c 73 76 5f 70 72 69 76 61 74 65   q3dm6\sv_private
0090  43 6c 69 65 6e 74 73 5c 33 5c 73 76 5f 68 6f 73   Clients\3\sv_hos
00a0  74 6e 61 6d 65 5c 20 20 2d 2d 3d 3d 20 51 20 55   tname\  --== Q U 
00b0  20 41 20 44 20 52 20 55 20 4d 20 3d 3d 2d 2d 5c    A D R U M ==--\
00c0  73 76 5f 6d 61 78 63 6c 69 65 6e 74 73 5c 31 38   sv_maxclients\18
00d0  5c 73 76 5f 6d 61 78 52 61 74 65 5c 32 35 30 30   \sv_maxRate\2500
00e0  30 5c 73 76 5f 6d 69 6e 50 69 6e 67 5c 30 5c 73   0\sv_minPing\0\s
00f0  76 5f 6d 61 78 50 69 6e 67 5c 30 5c 73 76 5f 66   v_maxPing\0\sv_f
0100  6c 6f 6f 64 50 72 6f 74 65 63 74 5c 31 5c 73 76   loodProtect\1\sv
0110  5f 61 6c 6c 6f 77 41 6e 6f 6e 79 6d 6f 75 73 5c   _allowAnonymous\
0120  30 5c 73 76 5f 61 6c 6c 6f 77 44 6f 77 6e 6c 6f   0\sv_allowDownlo
0130  61 64 5c 30 5c 67 61 6d 65 73 74 61 72 74 75 70   ad\0\gamestartup
0140  5c 32 35 2e 30 38 2e 32 30 30 33 20 30 35 3a 30   \25.08.2003 05:0
0150  30 3a 31 31 5c 41 64 6d 69 6e 69 73 74 72 61 74   0:11\Administrat
0160  6f 72 5c 4b 61 68 6c 65 73 73 5c 55 52 4c 5c 77   or\Kahless\URL\w
0170  77 77 2e 62 6f 68 77 2d 63 6c 61 6e 2e 64 65 5c   ww.bohw-clan.de\
0180  43 6c 61 6e 5c 5b 42 6f 68 57 5d 5c 67 61 6d 65   Clan\[BohW]\game
0190  6e 61 6d 65 5c 62 61 73 65 71 33 5c 67 5f 6d 61   name\baseq3\g_ma
01a0  78 47 61 6d 65 43 6c 69 65 6e 74 73 5c 30 5c 63   xGameClients\0\c
01b0  61 70 74 75 72 65 6c 69 6d 69 74 5c 38 5c 67 5f   apturelimit\8\g_
01c0  6e 65 65 64 70 61 73 73 5c 30 0a 35 20 34 38 20   needpass\0.5 48 
01d0  22 43 33 50 4f 22 0a 30 20 33 33 39 20 22 5e 31   "C3PO".0 339 "^1
01e0  4e 5e 36 61 53 74 6f 5e 31 4c 5e 36 61 54 6b 5e   N^6aSto^1L^6aTk^
01f0  31 41 22 0a 32 20 35 30 20 22 5e 31 5b 5e 33 4d   1A".2 50 "^1[^3M 
0200  2e 5e 31 41 2e 5e 33 44 2e 5e 31 5d 5e 31 43 5e   .^1A.^3D.^1]^1C^
0210  33 4f 4c 4f 22 0a 32 37 20 34 30 20 22 5e 33 2a   3OLO".27 40 "^3*
0220  43 6f 6c 2e 4b 75 72 74 7a 2a 22 0a 33 34 20 35   Col.Kurtz*".34 5
0230  30 20 22 6d 63 2d 42 61 73 74 61 72 44 22 0a 32   0 "mc-BastarD".2
0240  39 20 34 38 20 22 5e 31 5b 5e 33 4d 2e 5e 31 41   9 48 "^1[^3M.^1A
0250  2e 5e 33 44 2e 5e 31 5d 5e 31 4b 5e 33 31 5e 31   .^3D.^1]^1K^31^1
0260  4c 4c 61 22 0a 33 32 20 35 30 20 22 5e 5e 30 5d   LLa".32 50 "^^0]
0270  46 46 41 5b 46 69 73 68 5e 37 69 22 0a 36 20 35   FFA[Fish^7i".6 5
0280  30 20 22 52 32 44 32 22 0a                        0 "R2D2".

Hier ein statusReponse welches auf ein getstatus mit challenge antwortet:

0000  ff ff ff ff 73 74 61 74 75 73 52 65 73 70 6f 6e   ÿÿÿÿstatusRespon
0010  73 65 0a 5c 63 68 61 6c 6c 65 6e 67 65 5c 31 30   se.\challenge\10
0020  36 31 38 32 39 35 34 37 37 32 33 5c 73 76 5f 70   61829547723\sv_p
0030  75 6e 6b 62 75 73 74 65 72 5c 30 5c 67 5f 6d 61   unkbuster\0\g_ma
0040  78 47 61 6d 65 43 6c 69 65 6e 74 73 5c 30 5c 63   xGameClients\0\c
0050  61 70 74 75 72 65 6c 69 6d 69 74 5c 30 5c 73 76   apturelimit\0\sv
0060  5f 6d 61 78 63 6c 69 65 6e 74 73 5c 38 5c 74 69   _maxclients\8\ti
0070  6d 65 6c 69 6d 69 74 5c 30 5c 66 72 61 67 6c 69   melimit\0\fragli
0080  6d 69 74 5c 31 35 30 5c 64 6d 66 6c 61 67 73 5c   mit\150\dmflags\
0090  30 5c 73 76 5f 6d 61 78 50 69 6e 67 5c 30 5c 73   0\sv_maxPing\0\s
00a0  76 5f 6d 69 6e 50 69 6e 67 5c 30 5c 73 76 5f 68   v_minPing\0\sv_h
00b0  6f 73 74 6e 61 6d 65 5c 48 75 65 68 6e 65 72 46   ostname\HuehnerF
00c0  61 72 6d 5c 73 76 5f 6d 61 78 52 61 74 65 5c 30   arm\sv_maxRate\0
00d0  5c 73 76 5f 66 6c 6f 6f 64 50 72 6f 74 65 63 74   \sv_floodProtect
00e0  5c 31 5c 76 65 72 73 69 6f 6e 5c 51 33 20 31 2e   \1\version\Q3 1.
00f0  33 32 62 20 6c 69 6e 75 78 2d 69 33 38 36 20 4e   32b linux-i386 N
0100  6f 76 20 31 34 20 32 30 30 32 5c 67 5f 67 61 6d   ov 14 2002\g_gam
0110  65 74 79 70 65 5c 30 5c 70 72 6f 74 6f 63 6f 6c   etype\0\protocol
0120  5c 36 38 5c 6d 61 70 6e 61 6d 65 5c 71 33 64 6d   \68\mapname\q3dm
0130  30 5c 73 76 5f 70 72 69 76 61 74 65 43 6c 69 65   0\sv_privateClie
0140  6e 74 73 5c 30 5c 73 76 5f 61 6c 6c 6f 77 44 6f   nts\0\sv_allowDo
0150  77 6e 6c 6f 61 64 5c 30 5c 62 6f 74 5f 6d 69 6e   wnload\0\bot_min
0160  70 6c 61 79 65 72 73 5c 30 5c 67 61 6d 65 6e 61   players\0\gamena
0170  6d 65 5c 62 61 73 65 71 33 5c 67 5f 6e 65 65 64   me\baseq3\g_need
0180  70 61 73 73 5c 30 0a                              pass\0.

statusResponse ist die Antwort des Servers auf getstatus.
Ab statusResponse gibt der Server zuerst den Namen der Konsolenvariable und
dann deren Wert zurück. Trennzeichen ist "\".
Nach den Variablen kommt ASCII Hex 0x0A und ab dann die Spieler Infos.
Die Spieler Infos sind durch Leerzeichen getrennt und tauchen in Blöcken auf.
<anzahlfrags> <ping> "<nickname>"
Diese Blöcke sind wiederrum durch ASCII Hex 0x0A getrennt.
Am Ende des Pakets steht ASCII Hex 0x0A.

Bemerkungen:
Die Abfrage wurde mit qstat 2.4e ausgeführt, da der Q3 interne Serverbrowser
nur getinfo benutzt.


1.2.5. getchallenge
-----------------
(Client -> Server)

0000  ff ff ff ff 67 65 74 63 68 61 6c 6c 65 6e 67 65   ÿÿÿÿgetchallenge

Keine Parameter.


1.2.6. challengeResponse
----------------------
(Server -> Client)

0000  ff ff ff ff 63 68 61 6c 6c 65 6e 67 65 52 65 73   ÿÿÿÿchallengeRes
0010  70 6f 6e 73 65 20 39 36 31 31 36 36 35 31         ponse 96116651

Die Zahl nach "challengeResponse" ist wahrscheinlich ein "signed 32bit integer".


1.2.7. connect
------------
(Client -> Server)

0000  ff ff ff ff 63 6f 6e 6e 65 63 74 20 01 53 44 74   ÿÿÿÿconnect .SDt
0010  30 8e 05 0c c7 26 c3 14 ec 8e f9 67 70 1a 36 c1   0...Ç&Ã.ì.ùgp.6Á
0020  48 f9 09 2b 72 38 3a 0e 83 bd e2 54 b8 44 5b 61   Hù.+r8:..½âT¸D[a
0030  49 d7 95 83 6e e8 32 1c 7d 93 d1 67 09 d7 82 a5   I×..nè2.}.Ñg.×.¥
0040  c5 24 ad 43 d0 c0 20 d5 88 70 44 05 cc 14 61 5e   Å$­CÐÀ Õ.pD.Ì.a^
0050  e1 cf 92 de 0c 31 e0 d4 00 a6 39 61 7f e4 1e 84   áÏ.Þ.1àÔ.¦9a.ä..
0060  ce 69 74 af e7 19 30 9f ac 58 f3 18 cd 03 ce 02   Îit¯ç.0.¬Xó.Í.Î.
0070  cf 44 6e 59 d6 d3 41 3d 9e 77 6c 5f aa 43 f1 08   ÏDnYÖÓA=.wl_ªCñ.
0080  1c d4 35 e9 a5 6c bc fe fd fd 9e e5 9f e2 87 8f   .Ô5é¥l¼þýý.å.â..
0090  9e 6d d7 34 e2 e8 39 38 e8 97 87 61 66 4d 08 6b   .m×4âè98è..afM.k
00a0  68 2b 5b 0b 71 e8 6e df f3 ef 36 3e f7 31 cb fa   h+[.qènßóï6>÷1Ëú
00b0  05 78 1c b5 8d 20 e6 6a 9c 9d d5 8b 8b c1 22 6a   .x.µ. æj..Õ..Á"j
00c0  d9 47 4f 74 e0 f9 be bb d1 40 22 d3 f2 0d a8 fe   ÙGOtàù¾»Ñ@"Óò.¨þ
00d0  6f 3f d4 60 1b 76 14 91 95 59 d6 57 f8 0e 82 a7   o?Ô`.v...YÖWø..§
00e0  75 31 9c 6f 8b be 15 70 9d f5 4b 83 6d 58 2f ce   u1.o.¾.p.õK.mX/Î
00f0  3a bf de a7 9e bf 34 86 75 56 30 96 c3 7e 2f e9   :¿Þ§.¿4.uV0.Ã~/é
0100  61 e1 61 52 34 8e 6b 9e c2 cc 41 8c e1 48 96 d5   aáaR4.k.ÂÌA.áH.Õ
0110  91 8b db 66 18 19 13 fc e8 00                     ..Ûf...üè.

Nach "challengeResponse" schickt der Client ein Paket, dass wie dieses aussieht.


1.2.8. connectResponse
--------------------
(Server -> Client)

0000  00 01 6d 38 6d 38 00 1b e1 3e ff ff ff ff 63 6f   ..m8m8..á>ÿÿÿÿco
0010  6e 6e 65 63 74 52 65 73 70 6f 6e 73 65            nnectResponse   

Keine Parameter.


1.2.9. heartbeat
--------------
(Server -> Master)

0000  ff ff ff ff 68 65 61 72 74 62 65 61 74 20 51 75   ÿÿÿÿheartbeat Qu
0010  61 6b 65 41 72 65 6e 61 2d 31 0a                  akeArena-1.

Heartbeats werden von Dedicated Servern an die in sv_master[1-8] definierten
Master Server geschickt. Heartbeats werden direkt nach einem Map Wechsel, alle
300 Sekunden oder wenn ein Spieler das Spiel betritt oder verlässt geschickt.
"QuakeArena-1" scheint eine ID zu sein.
sv_master1 ist standardmässig master.quake3arena.com.

Wenn man einen Server beendet schickt dieser in sehr kurzer Zeit 2 heartbeat
Pakete an den/die Master Server, um zu signalisieren, dass dieser abgeschaltet
wird.

Ich habe herausgefunden, dass auf ein "heartbeat" Paket vom Master ein
"getstatus" Paket mit challenge folgt, womit der Master sich die Informationen
(wie z.B. "protocol", etc.) über den Server holt.


1.2.10 print
------------

0000  ff ff ff ff 70 72 69 6e 74 0a 53 65 72 76 65 72   ÿÿÿÿprint.Server
0010  20 75 73 65 73 20 70 72 6f 74 6f 63 6f 6c 20 76    uses protocol v
0020  65 72 73 69 6f 6e 20 36 36 2e 0a                  ersion 66..

Mit einem "print" Paket kann der Server den Client den Text nach "print"
anzeigen lassen.
Wird verwendet bei "Invalid Password", falscher Protokoll Version, etc.

--

2. Heretic2 Protokoll
=====================
Heretic2 Server Port: UDP 28910

Heretic2 Master IP: 209.98.56.7
Heretic2 Master DNS name: master.ravensoft.com
Heretic2 Master Server Port: UDP 28900

Heretic2 Gamespy Master IP: 207.38.8.34
Heretic2 Gamespy Master Port: UDP 27900

Protokoll Marker: 0xff 0xff 0xff 0xff

+set public 1
public 1
setmaster 10.0.0.1 10.0.0.2 10.0.0.3 (max. 7 Master Server)


2.1.1. shutdown
---------------
(Server -> Master)

0000  ff ff ff ff 73 68 75 74 64 6f 77 6e                ÿÿÿÿshutdown

Signalisiert, dass der Server heruntergefahren wird.


2.1.2. heartbeat
----------------
(Server -> Master)

Gamespy Heartbeat Paket:

0000  5c 68 65 61 72 74 62 65 61 74 5c 32 38 39 31 31    \heartbeat\28911
0010  5c 67 61 6d 65 6e 61 6d 65 5c 68 65 72 65 74 69    \gamename\hereti
0020  63 32                                              c2


H2 Master Heartbeat Paket, keine Spieler:

0000  ff ff ff ff 68 65 61 72 74 62 65 61 74 0a 5c 6d    ÿÿÿÿheartbeat.\m
0010  61 70 6e 61 6d 65 5c 64 6d 63 69 74 61 64 65 6c    apname\dmcitadel
0020  5c 6e 6f 6d 6f 6e 73 74 65 72 73 5c 30 5c 67 61    \nomonsters\0\ga
0030  6d 65 64 61 74 65 5c 41 75 67 20 20 38 20 32 30    medate\Aug  8 20
0040  30 31 5c 67 61 6d 65 6e 61 6d 65 5c 48 65 72 65    01\gamename\Here
0050  74 69 63 32 76 31 36 5c 6d 61 78 63 6c 69 65 6e    tic2v16\maxclien
0060  74 73 5c 38 5c 70 72 6f 74 6f 63 6f 6c 5c 35 31    ts\8\protocol\51
0070  5c 63 68 65 61 74 73 5c 30 5c 74 69 6d 65 6c 69    \cheats\0\timeli
0080  6d 69 74 5c 30 5c 66 72 61 67 6c 69 6d 69 74 5c    mit\0\fraglimit\
0090  30 5c 64 6d 66 6c 61 67 73 5c 33 32 37 36 38 5c    0\dmflags\32768\
00a0  64 65 61 74 68 6d 61 74 63 68 5c 31 5c 76 65 72    deathmatch\1\ver
00b0  73 69 6f 6e 5c 31 2e 30 36 61 2e 30 31 2e 30 35    sion\1.06a.01.05
00c0  30 34 2e 30 31 3a 20 20 78 38 36 20 41 75 67 20    04.01:  x86 Aug 
00d0  20 38 20 32 30 30 31 20 52 45 4c 45 41 53 45 5c     8 2001 RELEASE\
00e0  61 64 76 61 6e 63 65 64 73 74 61 66 66 5c 31 5c    advancedstaff\1\
00f0  68 6f 73 74 6e 61 6d 65 5c 48 75 65 68 6e 65 72    hostname\Huehner
0100  66 61 72 6d 5c 75 73 65 72 64 69 72 5c 2f 68 6f    farm\userdir\/ho
0110  6d 65 2f 61 6e 64 72 65 2f 2e 6c 6f 6b 69 2f 68    me/andre/.loki/h
0120  65 72 65 74 69 63 32 0a                            eretic2.

H2 Master Heartbeat Paket, 1 Spieler:

0000  ff ff ff ff 68 65 61 72 74 62 65 61 74 0a 5c 6d    ÿÿÿÿheartbeat.\m
0010  61 70 6e 61 6d 65 5c 64 6d 74 6f 77 65 72 5c 6e    apname\dmtower\n
0020  6f 6d 6f 6e 73 74 65 72 73 5c 30 5c 67 61 6d 65    omonsters\0\game
0030  64 61 74 65 5c 41 75 67 20 20 38 20 32 30 30 31    date\Aug  8 2001
0040  5c 67 61 6d 65 6e 61 6d 65 5c 48 65 72 65 74 69    \gamename\Hereti
0050  63 32 76 31 36 5c 6d 61 78 63 6c 69 65 6e 74 73    c2v16\maxclients
0060  5c 38 5c 70 72 6f 74 6f 63 6f 6c 5c 35 31 5c 63    \8\protocol\51\c
0070  68 65 61 74 73 5c 30 5c 74 69 6d 65 6c 69 6d 69    heats\0\timelimi
0080  74 5c 30 5c 66 72 61 67 6c 69 6d 69 74 5c 30 5c    t\0\fraglimit\0\
0090  64 6d 66 6c 61 67 73 5c 33 32 37 36 38 5c 64 65    dmflags\32768\de
00a0  61 74 68 6d 61 74 63 68 5c 31 5c 76 65 72 73 69    athmatch\1\versi
00b0  6f 6e 5c 31 2e 30 36 61 2e 30 31 2e 30 35 30 34    on\1.06a.01.0504
00c0  2e 30 31 3a 20 20 78 38 36 20 41 75 67 20 20 38    .01:  x86 Aug  8
00d0  20 32 30 30 31 20 52 45 4c 45 41 53 45 5c 61 64     2001 RELEASE\ad
00e0  76 61 6e 63 65 64 73 74 61 66 66 5c 31 5c 68 6f    vancedstaff\1\ho
00f0  73 74 6e 61 6d 65 5c 48 75 65 68 6e 65 72 66 61    stname\Huehnerfa
0100  72 6d 5c 75 73 65 72 64 69 72 5c 2f 68 6f 6d 65    rm\userdir\/home
0110  2f 61 6e 64 72 65 2f 2e 6c 6f 6b 69 2f 68 65 72    /andre/.loki/her
0120  65 74 69 63 32 0a 2d 32 20 31 37 20 22 43 68 69    etic2.-2 17 "Chi
0130  63 6b 65 6e 4d 61 6e 22 0a                         ckenMan".


Nach "heartbeat" folgt ein "\n" (Hex 0x0A) und es werden einige Variablen,
sowie deren Wert ausgegeben. Der Block Variablen Block endet mit einem
"\n" (Hex 0x0A).
Getrennt werden die Werte durch "\" (Hex 0x5C).
Die Werte die ausgegeben werden:
mapname
nomonsters
gamedate
gamename
maxclients
protocol
cheats
timelimit
fraglimit
dmflags
deathmatch
version
advancedstaff
hostname
userdir

Nach dem Variablen Block folgen, sofern vorhanden, die Spieler, welche gerade
auf dem Server sind. Diese sind wieder in Blöcke aufgeteilt welche Frags,
Ping und Nickname enthalten. Getrennt sind die Blöcke durch "\n" (Hex 0x0A).
Innerhalb eines Blocks sind die Informationen durch " " (Hex 0x20) getrennt.
Heartbeats werden nach jedem Map Wechsel oder alle 300 Sekunden geschickt.


2.1.3. info
-----------
(Client -> Server)

Broadcast Paket:
----------------
0000  ff ff ff ff 69 6e 66 6f 20 35 31                   ÿÿÿÿinfo 51

Antwort Paket:
--------------
0000  ff ff ff ff 69 6e 66 6f 0a 44 69 76 69 6e 65 20    ÿÿÿÿinfo.Divine 
0010  52 65 66 6c 65 63 74 69 6f 6e 20 5b 42 6c 61 64    Reflection [Blad
0020  65 6d 61 74 63 68 5d 0a 20 20 20 67 74 6f 6d 62    ematch].   gtomb
0030  20 20 30 2f 31 36 0a                                 0/16.

"info" wird verwendet wenn man lokal im LAN einen H2 Server sucht.
Der Client schickt ein Paket "info 51" an 255.255.255.255:28910.
51 ist die Protokoll Version. Die Server mit der passenden Protokollversion
antworten mit einem "info" Paket welches die Variable "hostname", "mapname"
und die Anzahl der Spieler, sowie max. Zahl der Spieler enthält. Die
einzelnen Blöcke sind durch "\n" (Hex 0x0A) und " " (Hex 0x20) getrennt.


2.1.4. status
-------------
(Client -> Server)

0000  ff ff ff ff 73 74 61 74 75 73 0a                   ÿÿÿÿstatus.

qstat schickt an H2 Server "status" um deren Informationen zu bekommen.
Die Server antworten in der Form, welche in "print" beschrieben wird.


2.1.5. print
------------
(Server -> Client)

0000  ff ff ff ff 70 72 69 6e 74 0a 5c 6d 61 70 6e 61    ÿÿÿÿprint.\mapna
0010  6d 65 5c 67 64 6f 6d 65 5c 6e 6f 6d 6f 6e 73 74    me\gdome\nomonst
0020  65 72 73 5c 30 5c 67 61 6d 65 64 61 74 65 5c 4f    ers\0\gamedate\O
0030  63 74 20 32 31 20 32 30 30 33 5c 67 61 6d 65 6e    ct 21 2003\gamen
0040  61 6d 65 5c 48 65 72 65 74 69 63 32 76 31 36 5c    ame\Heretic2v16\
0050  67 61 6d 65 64 69 72 5c 74 6d 6f 64 5c 6d 61 78    gamedir\tmod\max
0060  63 6c 69 65 6e 74 73 5c 31 36 5c 70 72 6f 74 6f    clients\16\proto
0070  63 6f 6c 5c 35 31 5c 63 68 65 61 74 73 5c 30 5c    col\51\cheats\0\
0080  74 69 6d 65 6c 69 6d 69 74 5c 34 30 5c 66 72 61    timelimit\40\fra
0090  67 6c 69 6d 69 74 5c 32 30 5c 61 64 76 61 6e 63    glimit\20\advanc
00a0  65 64 73 74 61 66 66 5c 31 5c 64 6d 66 6c 61 67    edstaff\1\dmflag
00b0  73 5c 33 32 37 38 34 5c 64 65 61 74 68 6d 61 74    s\32784\deathmat
00c0  63 68 5c 31 5c 76 65 72 73 69 6f 6e 5c 31 2e 30    ch\1\version\1.0
00d0  36 61 2e 30 31 2e 30 35 30 34 2e 30 31 3a 20 20    6a.01.0504.01:  
00e0  78 38 36 20 41 75 67 20 20 38 20 32 30 30 31 20    x86 Aug  8 2001 
00f0  52 45 4c 45 41 53 45 5c 68 6f 73 74 6e 61 6d 65    RELEASE\hostname
0100  5c 44 69 76 69 6e 65 20 52 65 66 6c 65 63 74 69    \Divine Reflecti
0110  6f 6e 20 5b 42 6c 61 64 65 6d 61 74 63 68 5d 5c    on [Bladematch]\
0120  75 73 65 72 64 69 72 5c 2f 68 6f 6d 65 2f 68 65    userdir\/home/he
0130  72 65 74 69 63 32 2f 2e 6c 6f 6b 69 2f 68 65 72    retic2/.loki/her
0140  65 74 69 63 32 5c 67 61 6d 65 5c 74 6d 6f 64 0a    etic2\game\tmod.

"print" ist die Antwort auf "status", und gibt Informationen über das laufende
Spiel auf dem Server zurück. Trenner ist "\". (Hex 0x5C)
Hier eine Liste der Variablen die der Server schickt:
mapname
nomonsters
gamedate
gamename
maxclients
protocol
cheats
timelimit
fraglimit
advancedstaff
dmflags
deathmatch
version
hostname
userdir
game

"game" scheint nur aufzutauchen falls es gesetzt ist.


2.1.6. getchallenge
-------------------
(Client -> Server)

0000  ff ff ff ff 67 65 74 63 68 61 6c 6c 65 6e 67 65    ÿÿÿÿgetchallenge
0010  0a                                                 .     

"getchallenge" ist der erste Schritt beim Aufbau einer Verbindung zu einem
Heretic2 Server.


2.1.7. challenge
----------------
(Server -> Client)

0000  ff ff ff ff 63 68 61 6c 6c 65 6e 67 65 20 32 30    ÿÿÿÿchallenge 20
0010  38 30 30 36 37 32 33                               8006723

"challenge" ist die Antwort des Servers auf "getchallenge". Die Nummer ist
wahrscheinlich ein 32bit Integer mit Vorzeichen.


2.1.8. connect
--------------
(Client -> Server)

0000  ff ff ff ff 63 6f 6e 6e 65 63 74 20 35 31 20 35    ÿÿÿÿconnect 51 5
0010  36 34 20 32 30 38 30 30 36 37 32 33 20 22 5c 61    64 208006723 "\a
0020  75 74 6f 77 65 61 70 6f 6e 5c 30 5c 6e 61 6d 65    utoweapon\0\name
0030  5c 43 68 69 63 6b 65 6e 4d 61 6e 5c 73 6b 69 6e    \ChickenMan\skin
0040  5c 6d 61 6c 65 2f 52 6f 67 75 65 5c 72 61 74 65    \male/Rogue\rate
0050  5c 32 35 30 30 30 5c 6d 73 67 5c 31 5c 66 6f 76    \25000\msg\1\fov
0060  5c 37 35 2e 30 22 0a                               \75.0".

"connect" ist der dritte Schritt des Verbindungsaufbaus. Die Bedeutung der 2
Zahlen nach "connect" ist mir unbekannt. Die dritte Zahl ist die "challenge"
Nummer aus dem "challenge" Paket. Danach folgen Informationen über den Client.


2.1.9. client_connect
---------------------
(Server -> Client)

0000  ff ff ff ff 63 6c 69 65 6e 74 5f 63 6f 6e 6e 65    ÿÿÿÿclient_conne
0010  63 74                                              ct

"client_connect" ist die Antwort des Servers auf "connect".


2.1.10. ping
------------
(Server -> Master)

0000  ff ff ff ff 70 69 6e 67                            ÿÿÿÿping


--

3. Quake2 Protokoll
============================

Quake2 Server Port: UDP 27910
Quake2 Master IP: 192.246.40.37
Quake2 Master Server Port: UDP 27900

+set public 1
public 1
setmaster 10.0.0.1 10.0.0.2 10.0.0.3 (max. 7 Master Server)
Protokoll Marker: 0xff 0xff 0xff 0xff


3.1. heartbeat
--------------
(Server -> Master)

0000  ff ff ff ff 68 65 61 72 74 62 65 61 74 0a 5c 6d   ÿÿÿÿheartbeat.\m
0010  61 70 6e 61 6d 65 5c 71 32 64 6d 31 5c 6e 65 65   apname\q2dm1\nee
0020  64 70 61 73 73 5c 30 5c 6d 61 78 73 70 65 63 74   dpass\0\maxspect
0030  61 74 6f 72 73 5c 34 5c 67 61 6d 65 64 61 74 65   ators\4\gamedate
0040  5c 44 65 63 20 31 36 20 32 30 30 32 5c 67 61 6d   \Dec 16 2002\gam
0050  65 6e 61 6d 65 5c 62 61 73 65 71 32 5c 6d 61 78   ename\baseq2\max
0060  63 6c 69 65 6e 74 73 5c 38 5c 70 72 6f 74 6f 63   clients\8\protoc
0070  6f 6c 5c 33 34 5c 63 68 65 61 74 73 5c 30 5c 74   ol\34\cheats\0\t
0080  69 6d 65 6c 69 6d 69 74 5c 30 5c 66 72 61 67 6c   imelimit\0\fragl
0090  69 6d 69 74 5c 30 5c 64 6d 66 6c 61 67 73 5c 31   imit\0\dmflags\1
00a0  36 5c 64 65 61 74 68 6d 61 74 63 68 5c 31 5c 76   6\deathmatch\1\v
00b0  65 72 73 69 6f 6e 5c 33 2e 32 31 20 69 33 38 36   ersion\3.21 i386
00c0  20 44 65 63 20 31 36 20 32 30 30 32 20 4c 69 6e    Dec 16 2002 Lin
00d0  75 78 5c 68 6f 73 74 6e 61 6d 65 5c 6e 6f 6e 61   ux\hostname\nona
00e0  6d 65 0a                                          me.   

Alle 300 Sekunden wird signalisiert, dass der Server noch läuft.
Warum die Konsolen Variablen mitgeschickt werden, wüsste ich auch gerne.


3.2. query
----------
(Client -> Master)

0000  71 75 65 72 79 0a 00                              query..

Fordert die Serverliste vom Master an.


3.3. shutdown
-------------
(Server -> Master)

0000  ff ff ff ff 73 68 75 74 64 6f 77 6e               ÿÿÿÿshutdown

Signalisiert dem/den Master(n), dass der Server heruntergefahren wurde.


3.4. status
-----------
(Client -> Server)

0000  ff ff ff ff 73 74 61 74 75 73 0a                  ÿÿÿÿstatus.

Abfrage der Spiel-/Serverdaten.


3.5. print
----------

1 Spieler, baseq2:

0000  ff ff ff ff 70 72 69 6e 74 0a 5c 6d 61 70 6e 61   ÿÿÿÿprint.\mapna
0010  6d 65 5c 71 32 64 6d 31 5c 6e 65 65 64 70 61 73   me\q2dm1\needpas
0020  73 5c 30 5c 6d 61 78 73 70 65 63 74 61 74 6f 72   s\0\maxspectator
0030  73 5c 34 5c 67 61 6d 65 64 61 74 65 5c 44 65 63   s\4\gamedate\Dec
0040  20 31 36 20 32 30 30 32 5c 67 61 6d 65 6e 61 6d    16 2002\gamenam
0050  65 5c 62 61 73 65 71 32 5c 6d 61 78 63 6c 69 65   e\baseq2\maxclie
0060  6e 74 73 5c 38 5c 70 72 6f 74 6f 63 6f 6c 5c 33   nts\8\protocol\3
0070  34 5c 63 68 65 61 74 73 5c 30 5c 74 69 6d 65 6c   4\cheats\0\timel
0080  69 6d 69 74 5c 30 5c 66 72 61 67 6c 69 6d 69 74   imit\0\fraglimit
0090  5c 30 5c 64 6d 66 6c 61 67 73 5c 31 36 5c 64 65   \0\dmflags\16\de
00a0  61 74 68 6d 61 74 63 68 5c 31 5c 76 65 72 73 69   athmatch\1\versi
00b0  6f 6e 5c 33 2e 32 31 20 69 33 38 36 20 44 65 63   on\3.21 i386 Dec
00c0  20 31 36 20 32 30 30 32 20 4c 69 6e 75 78 5c 68    16 2002 Linux\h
00d0  6f 73 74 6e 61 6d 65 5c 6e 6f 6e 61 6d 65 0a 30   ostname\noname.0
00e0  20 36 20 22 43 68 69 63 6b 65 6e 4d 61 6e 22 0a    6 "ChickenMan".

Zum Vergleich 13 Spieler, gloom:

0000  ff ff ff ff 70 72 69 6e 74 0a 5c 6d 61 70 6e 61   ÿÿÿÿprint.\mapna
0010  6d 65 5c 68 61 67 67 65 73 5f 66 69 78 32 5c 67   me\hagges_fix2\g
0020  61 6d 65 64 61 74 65 5c 4e 6f 76 20 31 33 20 32   amedate\Nov 13 2
0030  30 30 32 5c 67 61 6d 65 6e 61 6d 65 5c 67 6c 6f   002\gamename\glo
0040  6f 6d 5c 67 6c 6f 6f 6d 76 65 72 73 69 6f 6e 5c   om\gloomversion\
0050  31 2e 78 5c 75 70 74 69 6d 65 5c 32 35 64 61 79   1.x\uptime\25day
0060  73 2c 20 39 68 72 73 2c 20 34 39 6d 69 6e 73 5c   s, 9hrs, 49mins\
0070  63 75 72 70 6c 61 79 65 72 73 5c 31 33 5c 6d 61   curplayers\13\ma
0080  78 70 6c 61 79 65 72 73 5c 32 37 5c 6e 65 65 64   xplayers\27\need
0090  70 61 73 73 5c 30 5c 76 6f 74 69 6e 67 5c 31 32   pass\0\voting\12
00a0  37 5c 6d 61 78 5f 63 6c 5f 6d 61 78 66 70 73 5c   7\max_cl_maxfps\
00b0  39 30 5c 6d 61 78 5f 72 61 74 65 5c 32 35 30 30   90\max_rate\2500
00c0  30 5c 70 72 6f 74 6f 63 6f 6c 5c 33 35 5c 63 68   0\protocol\35\ch
00d0  65 61 74 73 5c 30 5c 76 65 72 73 69 6f 6e 5c 72   eats\0\version\r
00e0  31 2e 30 31 20 69 33 38 36 20 4e 6f 76 20 31 33   1.01 i386 Nov 13
00f0  20 32 30 30 32 20 4c 69 6e 75 78 5c 64 6d 66 6c    2002 Linux\dmfl
0100  61 67 73 5c 32 36 38 34 33 35 34 35 36 5c 78 6d   ags\268435456\xm
0110  69 6e 73 5c 30 5c 74 69 6d 65 6c 69 6d 69 74 5c   ins\0\timelimit\
0120  34 35 5c 66 72 61 67 6c 69 6d 69 74 5c 30 5c 6d   45\fraglimit\0\m
0130  61 78 63 6c 69 65 6e 74 73 5c 32 37 5c 64 65 61   axclients\27\dea
0140  74 68 6d 61 74 63 68 5c 31 5c 68 6f 73 74 6e 61   thmatch\1\hostna
0150  6d 65 5c 65 44 6f 6d 65 20 51 75 61 6b 65 32 20   me\eDome Quake2 
0160  47 6c 6f 6f 6d 5c 67 61 6d 65 64 69 72 5c 67 6c   Gloom\gamedir\gl
0170  6f 6f 6d 5c 67 61 6d 65 5c 67 6c 6f 6f 6d 0a 32   oom\game\gloom.2
0180  32 20 36 35 20 22 73 31 71 22 0a 36 36 20 35 30   2 65 "s1q".66 50
0190  20 22 53 6c 65 64 67 65 22 0a 32 31 35 20 37 37    "Sledge".215 77
01a0  20 22 53 77 61 74 22 0a 33 34 20 32 30 32 20 22    "Swat".34 202 "
01b0  4d 61 74 74 68 69 65 77 22 0a 33 38 20 37 30 20   Matthiew".38 70 
01c0  22 53 65 76 65 6e 22 0a 35 31 20 37 37 20 22 61   "Seven".51 77 "a
01d0  64 64 69 63 74 65 64 32 77 61 72 22 0a 31 35 32   ddicted2war".152
01e0  20 35 30 20 22 4e 6f 42 65 65 22 0a 31 32 20 33    50 "NoBee".12 3
01f0  32 34 20 22 61 66 72 6f 6e 69 67 67 61 22 0a 37   24 "afronigga".7
0200  33 20 39 31 20 22 43 69 6b 79 22 0a 36 31 20 34   3 91 "Ciky".61 4
0210  31 20 22 53 79 43 6f 20 6f 66 20 6f 6f 6f 48 22   1 "SyCo of oooH"
0220  0a 34 36 20 37 32 20 22 53 2d 49 2d 42 6c 6f 64   .46 72 "S-I-Blod
0230  2d 43 2d 4b 22 0a 35 20 36 36 20 22 72 6f 61 64   -C-K".5 66 "road
0240  6b 69 6c 6c 22 0a 31 36 20 33 33 20 22 5b 56 61   kill".16 33 "[Va
0250  6d 70 69 72 65 5d 42 6c 6f 6f 64 22 0a            mpire]Blood".

Antwort auf "status".
Genauere Beschreibung folgt.


3.6. info
---------
(Server -> Client)

0000  ff ff ff ff 69 6e 66 6f 0a 20 20 20 20 20 20 20   ÿÿÿÿinfo.       
0010  20 20 20 6e 6f 6e 61 6d 65 20 20 20 20 71 32 64      noname    q2d
0020  6d 31 20 20 30 2f 20 38 0a                        m1  0/8.

Serverinfo.


3.7. info
---------
(Client -> Server)

0000  ff ff ff ff 69 6e 66 6f 20 33 34                  ÿÿÿÿinfo 34

Client broadcastet ein solches Paket um andere Server zu finden.
34 ist die Protokoll Version.


3.8. getchallenge
-----------------
(Client -> Server)

0000  ff ff ff ff 67 65 74 63 68 61 6c 6c 65 6e 67 65   ÿÿÿÿgetchallenge
0010  0a                                                .     

Ein "Challenge" vom Server anfordern.


3.9. challenge
--------------
(Server -> Client)

0000  ff ff ff ff 63 68 61 6c 6c 65 6e 67 65 20 32 32   ÿÿÿÿchallenge 22
0010  36 39 35                                          695

Antwort auf ein "getchallenge" Paket.


3.10. connect
------------
(Client -> Server)

0000  ff ff ff ff 63 6f 6e 6e 65 63 74 20 33 34 20 38   ÿÿÿÿconnect 34 8
0010  31 30 20 32 32 36 39 35 20 22 5c 73 70 65 63 74   10 22695 "\spect
0020  61 74 6f 72 5c 30 5c 72 61 74 65 5c 31 30 30 30   ator\0\rate\1000
0030  30 5c 6d 73 67 5c 31 5c 66 6f 76 5c 39 30 5c 67   0\msg\1\fov\90\g
0040  65 6e 64 65 72 5c 6d 61 6c 65 5c 73 6b 69 6e 5c   ender\male\skin\
0050  6d 61 6c 65 2f 72 61 7a 6f 72 5c 6e 61 6d 65 5c   male/razor\name\
0060  43 68 69 63 6b 65 6e 4d 61 6e 5c 68 61 6e 64 5c   ChickenMan\hand\
0070  30 22 0a                                          0".   


3.11. client_connect
--------------------
(Server -> Client)

0000  ff ff ff ff 63 6c 69 65 6e 74 5f 63 6f 6e 6e 65   ÿÿÿÿclient_conne
0010  63 74                                             ct    


3.12. servers
-------------
(Master -> Client)

0000  ff ff ff ff 73 65 72 76 65 72 73 20 c2 fb f9 3a   ÿÿÿÿservers Âûù:
0010  6d 06 42 a2 3a 29 6d 07 42 8b 49 11 6d 06 c3 94   m.B¢:)m.B.I.m.Ã.
0020  30 cc 6d 06 88 a5 50 f3 6d 06 92 57 dc 05 6d 06   0Ìm..¥Póm..WÜ.m.
0030  42 a2 3a 29 6d 06 88 a5 50 f3 6d 07               B¢:)m..¥Póm.

Paket mit Serverliste von Q2 Master an Client.
Es gibt offensichtlich keine Trennzeichen wie bei getserversResponse von einem
Q3 Master.
Das einzige Trennzeichen ist ein 0x20 nach "servers".
Die Server sind wie bei dem Q3 Master in 6 Byte Blöcken verpackt.
	4 Byte IP Adresse
	2 Byte Port

Anmerkung:
Paket stammt vom Gloom Masterserver master.planetgloom.com, da leider kein
Q2 Master von ID Software mehr läuft.


3.13. ping
----------
(Server -> Master)

0000  ff ff ff ff 70 69 6e 67                           ÿÿÿÿping

Wird beim ausführen von "setmaster" in der Console geschickt.


3.14. ack
---------
(Master -> Server)

0000  ff ff ff ff 70 61 63 6b                           ÿÿÿÿack

Antwort auf "ping".

--

4. STV: Elite Force Protokoll
=============================

EF Server port: UDP 27960
EF Master DNS name: master.stef1.ravensoft.com
EF Master port: UDP 27953
EF MOTD DNS name: motd.stef1.ravensoft.com
EF MOTD server port: UDP 27951
EF auth server DNS name: authenticate.stef1.ravensoft.com
EF auth server port: UDP 27952

Protokoll Marker: 0xff 0xff 0xff 0xff


4.1. Master Server
------------------

4.1.1. getservers
-----------------
(Client -> Master)

0000  ff ff ff ff 67 65 74 73 65 72 76 65 72 73 20 32   ÿÿÿÿgetservers 2
0010  34 20 65 6d 70 74 79 20 66 75 6c 6c               4 empty full

getservers	- Befehl
24			- Protokollversion
				STEF1 1.20 == 24
empty full	- Welche Server angezeigt werden sollen. Kann auch weggelassen
			  werden um server zu bekommen, die weder voll noch leer sind.
Folgende Schlüsselwörter sind mir bekannt:
	empty - leere Server (keine Playerslots belegt)
	full - volle Server (alle Playerslots belegt, bis auf die private Slots)
	ffa - Free For All Server
	team - Team Deathmatch
	tourney - Tournament (1v1) Server
	ctf - Capture the Flag Server

getservers Pakete werden an master.stef1.ravensoft.com:27953 geschickt.


4.1.2. getserversResponse
-------------------------

0000  ff ff ff ff 67 65 74 73 65 72 76 65 72 73 52 65   ÿÿÿÿgetserversRe
0010  73 70 6f 6e 73 65 20 5c 38 32 64 37 38 32 31 63   sponse \82d7821c
0020  36 64 33 62 5c 34 35 33 38 61 32 38 36 36 64 33   6d3b\4538a2866d3
0030  61 5c 64 34 30 36 36 63 66 39 36 64 33 39 5c 34   a\d4066cf96d39\4
0040  35 31 63 66 30 64 65 36 64 33 38 5c 34 35 33 39   51cf0de6d38\4539
0050  38 34 34 64 36 64 5c 45 4f 54                     844d6d\EOT

Sieht aus wie bei Q3 isses aber offensichtlich nich. Zumindest nicht ganz
der STEF1 Master schickt IP und Port der Server zwar auch noch als Blöcke
aber diese sind Hexadezimal kodiert. Möchte mal wissen warum Ravensoft das
gemacht hat ...


4.1.3. getKeyAuthorize
----------------------
(Client -> Master)

STEF1
-----
0000  ff ff ff ff 67 65 74 4b 65 79 41 75 74 68 6f 72   ÿÿÿÿgetKeyAuthor
0010  69 7a 65 20 39 39 39 20 78 78 78 78 78 78 78 78   ize 999 xxxxxxxx
0020  78 78 78 78 78 78 78 78 78 78                     xxxxxxxxxx

getKeyAuthorize Pakete werden an authenticate.stef1.ravensoft.com:27952 UDP
geschickt.


4.1.4. getmotd
--------------
(Client -> Master)

0000  ff ff ff ff 67 65 74 6d 6f 74 64 20 22 5c 63 68   ÿÿÿÿgetmotd "\ch
0010  61 6c 6c 65 6e 67 65 5c 31 34 39 38 35 5c 76 65   allenge\14985\ve
0020  72 73 69 6f 6e 5c 53 54 3a 56 20 48 4d 20 76 31   rsion\ST:V HM v1
0030  2e 32 30 20 77 69 6e 2d 78 38 36 20 41 70 72 20   .20 win-x86 Apr 
0040  31 37 20 32 30 30 31 5c 72 65 6e 64 65 72 65 72   17 2001\renderer
0050  5c 47 65 46 6f 72 63 65 33 2f 41 47 50 2f 53 53   \GeForce3/AGP/SS
0060  45 5c 63 70 75 74 79 70 65 5c 49 6e 74 65 6c 20   E\cputype\Intel 
0070  50 65 6e 74 69 75 6d 20 49 49 49 5c 6d 68 7a 5c   Pentium III\mhz\
0080  37 35 30 5c 6d 65 6d 6f 72 79 5c 35 31 31 5c 6a   750\memory\511\j
0090  6f 79 73 74 69 63 6b 5c 30 5c 63 6f 6c 6f 72 62   oystick\0\colorb
00a0  69 74 73 5c 33 32 22                              its\32"

STEF1 übergibt challenge, version, renderer, cputype, memory, joystick und
colorbits. getmotd Pakete werden an motd.stef1.ravensoft.com:27951 UDP
geschickt.


4.1.5. motd
-----------
(Master -> Client)

0000  ff ff ff ff 6d 6f 74 64 20 22 5c 63 68 61 6c 6c   ÿÿÿÿmotd "\chall
0010  65 6e 67 65 5c 31 34 39 38 35 5c 6d 6f 74 64 5c   enge\14985\motd\
0020  48 6f 6c 6f 6d 61 74 63 68 65 72 20 23 33 34 30   Holomatcher #340
0030  36 37 20 6f 6e 6c 69 6e 65 2e 22                  67 online."

Der Challenge Wert wird aus dem getmotd Paket geparst.


4.2. Dedicated/Listen Server
----------------------------

4.2.1. getinfo
--------------
(Client -> Server)

0000  ff ff ff ff 67 65 74 69 6e 66 6f 0a               ÿÿÿÿgetinfo.

Keine Parameter bekannt.

4.2.2. infoResponse
-------------------

TODO: stef1 infoResponse paket

"infoResponse" ist die Antwort des Servers auf ein "getinfo" Paket.
Ab "infoResponse" gibt der Server zuerst die Konsolen Variable und dann
deren Wert auf dem Server zurück. Trennzeichen ist "\".

Bemerkung:
Der Server gibt bei getinfo/infoResponse nur wenige Variablen zurück:
punkbuster
pure
gametype
sv_maxclients
clients
mapname
hostname
protocol

Der 1.30 Server gibt dazu noch "sv_allowAnonymous" aus, exklusive "punkbuster".

Um andere Server in einem _nicht_ gerouteten LAN zu finden, schickt Q3 ein
"getinfo" Paket nach 255.255.255.255:[27960-27963].
Die Server antworten dann und schon hat man eine Liste der Server im Netzwerk.

getinfo wird vieleicht vom Master Server benutzt um festzustellen,
ob ein Server voll, leer oder belegt ist, um die getservers Anfrage von 
Clients richtig zu beantworten.


4.2.3. getstatus
--------------
(Client -> Server)

0000  ff ff ff ff 67 65 74 73 74 61 74 75 73 0a         ÿÿÿÿgetstatus.

0000  ff ff ff ff 67 65	74 73 74 61 74 75 73 20 30 31   ÿÿÿÿgetstatus 10
0010  36 31 38 32 39 35 34 37 37 32 33                  61829547723

getstatus ist eine ausführlichere Version von getinfo und wird vom Masterserver
nach jedem heartbeat geschickt.
Optionaler Parameter ist ein challenge Wert. Der Parameter wird meines Wissens
nur vom Masterserver benutzt.


4.2.4. statusResponse
---------------------

TODO: stef1 statusResponse paket

statusResponse ist die Antwort des Servers auf getstatus.
Ab statusResponse gibt der Server zuerst den Namen der Konsolenvariable und
dann deren Wert zurück. Trennzeichen ist "\".
Nach den Variablen kommt ASCII Hex 0x0A und ab dann die Spieler Infos.
Die Spieler Infos sind durch Leerzeichen getrennt und tauchen in Blöcken auf.
<anzahlfrags> <ping> "<nickname>"
Diese Blöcke sind wiederrum durch ASCII Hex 0x0A getrennt.
Am Ende des Pakets steht ASCII Hex 0x0A.

Bemerkungen:
Die Abfrage wurde mit qstat 2.4e ausgeführt, da der Q3 interne Serverbrowser
nur getinfo benutzt.


4.2.5. getchallenge
-----------------
(Client -> Server)

0000  ff ff ff ff 67 65 74 63 68 61 6c 6c 65 6e 67 65   ÿÿÿÿgetchallenge

Keine Parameter.


4.2.6. challengeResponse
----------------------
(Server -> Client)

0000  ff ff ff ff 63 68 61 6c 6c 65 6e 67 65 52 65 73   ÿÿÿÿchallengeRes
0010  70 6f 6e 73 65 20 39 36 31 31 36 36 35 31         ponse 96116651

Die Zahl nach "challengeResponse" ist wahrscheinlich ein "signed 32bit integer".


4.2.7. connect
--------------
(Client -> Server)

0000  ff ff ff ff 63 6f 6e 6e 65 63 74 20 01 53 44 74   ÿÿÿÿconnect .SDt
0010  30 8e 05 0c c7 26 c3 14 ec 8e f9 67 70 1a 36 c1   0...Ç&Ã.ì.ùgp.6Á
0020  48 f9 09 2b 72 38 3a 0e 83 bd e2 54 b8 44 5b 61   Hù.+r8:..½âT¸D[a
0030  49 d7 95 83 6e e8 32 1c 7d 93 d1 67 09 d7 82 a5   I×..nè2.}.Ñg.×.¥
0040  c5 24 ad 43 d0 c0 20 d5 88 70 44 05 cc 14 61 5e   Å$­CÐÀ Õ.pD.Ì.a^
0050  e1 cf 92 de 0c 31 e0 d4 00 a6 39 61 7f e4 1e 84   áÏ.Þ.1àÔ.¦9a.ä..
0060  ce 69 74 af e7 19 30 9f ac 58 f3 18 cd 03 ce 02   Îit¯ç.0.¬Xó.Í.Î.
0070  cf 44 6e 59 d6 d3 41 3d 9e 77 6c 5f aa 43 f1 08   ÏDnYÖÓA=.wl_ªCñ.
0080  1c d4 35 e9 a5 6c bc fe fd fd 9e e5 9f e2 87 8f   .Ô5é¥l¼þýý.å.â..
0090  9e 6d d7 34 e2 e8 39 38 e8 97 87 61 66 4d 08 6b   .m×4âè98è..afM.k
00a0  68 2b 5b 0b 71 e8 6e df f3 ef 36 3e f7 31 cb fa   h+[.qènßóï6>÷1Ëú
00b0  05 78 1c b5 8d 20 e6 6a 9c 9d d5 8b 8b c1 22 6a   .x.µ. æj..Õ..Á"j
00c0  d9 47 4f 74 e0 f9 be bb d1 40 22 d3 f2 0d a8 fe   ÙGOtàù¾»Ñ@"Óò.¨þ
00d0  6f 3f d4 60 1b 76 14 91 95 59 d6 57 f8 0e 82 a7   o?Ô`.v...YÖWø..§
00e0  75 31 9c 6f 8b be 15 70 9d f5 4b 83 6d 58 2f ce   u1.o.¾.p.õK.mX/Î
00f0  3a bf de a7 9e bf 34 86 75 56 30 96 c3 7e 2f e9   :¿Þ§.¿4.uV0.Ã~/é
0100  61 e1 61 52 34 8e 6b 9e c2 cc 41 8c e1 48 96 d5   aáaR4.k.ÂÌA.áH.Õ
0110  91 8b db 66 18 19 13 fc e8 00                     ..Ûf...üè.

Nach "challengeResponse" schickt der Client ein Paket, dass wie dieses aussieht.


4.2.8. connectResponse
----------------------
(Server -> Client)

0000  00 01 6d 38 6d 38 00 1b e1 3e ff ff ff ff 63 6f   ..m8m8..á>ÿÿÿÿco
0010  6e 6e 65 63 74 52 65 73 70 6f 6e 73 65            nnectResponse   

Keine Parameter.


4.2.9. heartbeat
----------------
(Server -> Master)

0000  ff ff ff ff 5c 68 65 61 72 74 62 65 61 74 5c 32   ÿÿÿÿ\heartbeat\2
0010  37 39 36 30 5c 67 61 6d 65 6e 61 6d 65 5c 53 54   7960\gamename\ST
0020  45 46 31 5c                                       EF1\

Sieht auch fast wie ein Q3 heartbeat aus abgesehen von den zusätzlichen
Trennzeichen und der gamename Variable. Der Wert nach Heartbeat ist der Port
auf welchem der STEF1 Server läuft.
Auf den ersten Heartbeat schickt der Master ein getchallenge und ein getstatus
Paket mit challenge. Auf weitere Heartbeats vom selben Server schickt der
Master abwechselnd ein getstatus mit challenge und ein getinfo mit challenge ...


4.2.10 print
------------

0000  ff ff ff ff 70 72 69 6e 74 0a 53 65 72 76 65 72   ÿÿÿÿprint.Server
0010  20 75 73 65 73 20 70 72 6f 74 6f 63 6f 6c 20 76    uses protocol v
0020  65 72 73 69 6f 6e 20 36 36 2e 0a                  ersion 66..

Mit einem "print" Paket kann der Server den Client den Text nach "print"
anzeigen lassen.
Wird verwendet bei "Invalid Password", falscher Protokoll Version, etc.


4.2.11 heartstop
----------------

0000  ff ff ff ff 5c 68 65 61 72 74 73 74 6f 70 5c 32   ÿÿÿÿ\heartstop\2
0010  37 39 36 30 5c 67 61 6d 65 6e 61 6d 65 5c 53 54   7960\gamename\ST
0020  45 46 31 5c                                       EF1\

Wenn der Server beendet wird schickt dieser ein heartstop Paket.


--


5. Unreal Tournament Protokoll
==============================

Server Port: UDP 7778
Master Server Port: TCP 28900

UT benutzt das Gamespy Protokoll, welches ziemlich simpel ist.
Die Form ist immer gleich.
Es werden Variablen und Werte gesendet die der Form:
\variable\wert\variable\wert\...

5.1. heartbeat
--------------
(Server -> Master)

Es gibt 2 verschiedene Heartbeat Pakete.
1. Epic Master Server
2. Gamespy Master Server

Pakete für Epic Master Server sehen folgendermassen aus:
\heartbeat\7778\gamename\ut\gamever\436

Der Wert von "heartbeat" gibt den Port an auf welchem der Server läuft.
"gamename" ist der Name des Spiels.
"gamever" die Version vom Game Server.

Pakete für Gamespy Master Server:
\heartbeat\7778\gamename\ut

Die Optionen haben dieselbe Bedeutung wie bei den Heartbeat Paketen für
Epic Master Server.

5.2. info
---------
(Client -> Server)

\info\

Dient zur Abfrage der Server Daten.
Das Antwort Paket enthält Variablen und Optionen in der Form:
\variable\option\variable\option\...\

Das Antwort Paket ist nicht speziell gekennzeichnet.
Antwort auf "\info\" ist ein Paket das folgendermassen aussieht:

\hostname\jolt.co.uk - Last Man Standing [Anticamper] (02)\hostport\7867\maptitle\Morpheus\mapname\DM-Morpheus\gametype\LastManStanding\numplayers\0\maxplayers\10\gamemode\openplaying\gamever\436\minnetver\400\worldlog\false\wantworldlog\false\queryid\89.1\final\


5.3. status
-----------
(Client -> Server)

\status\

Anforderung von detaillierten Server Daten.
Antwort in der Form:
\variable\option\variable\option\...\

Das Antwort Paket ist nicht speziell gekennzeichnet:
Antwort Paket sieht folgendermassen aus:

\hostname\[CSHP] UTASSAULT.thegamebox.org\hostport\7777\maptitle\Operation Desertstorm\mapname\AS-Desertstorm\gametype\Assault\numplayers\0\maxplayers\12\gamemode\openplaying\gamever\436\minnetver\432\worldlog\true\wantworldlog\true\queryid\91.1\final\g\true\wantworldlog\true\queryid\23.1\final\istenserver\False\password\False\timelimit\0\fraglimit\10\minplayers\0\changelevels\True\tournament\False\gamestyle\Hardcore\AdminName\Resonate / Bry\AdminEMail\resonate@jolt.co.uk\player_0\`Black_Panache\frags_0\0\ping_0\ 140\team_0\0\mesh_0\Spectator\skin_0\None\face_0\\ngsecret_0\false\player_1\master\frags_1\5\ping_1\ 75\team_1\255\mesh_1\Male Soldier\skin_1\SoldierSkins.hkil\face_1\SoldierSkins.matrix\ngsecret_1\true\player_2\1nf3rn0\frags_2\0\ping_2\ 63\team_2\255\mesh_2\Male Commando\skin_2\CommandoSkins.goth\face_2\CommandoSkins.Kragoth\ngsecret_2\false\player_3\AnimeE\frags_3\4\ping_3\ 105\team_3\255\mesh_3\Male Soldier\skin_3\SoldierSkins.Gard\face_3\SoldierSkins.Von\ngsecret_3\true\queryid\59.1\final\


5.4. REPORTQUERY
----------------
(Client -> Server)

REPORTQUERY

Ein Broadcast vom Client auf die Ports 8777-8786.


5.5. HTTP Traffic
-----------------
(Client -> Master)

GET /UpdateServer/utmotd436.html HTTP/1.1\r\n
User-Agent: Unreal\r\n
Connection: close\r\n
Host: unreal.epicgames.com:80\r\n
\r\n

UT baut eine TCP Verbindung zu unreal.epicgames.com:80 auf und
fordert per HTTP "/UpdateServer/utmotd436.html" an.
FIXME: ältere UT Versionen ausprobieren und schauen, ob sich das
	   der Befehl ändert. Z.B.: utmotd<version>.html

--

GET /UpdateServer/utmaster.txt HTTP/1.1\r\n
User-Agent: Unreal\r\n
Connection: close\r\n
Host: unreal.epicgames.com:80\r\n
\r\n

UT baut eine HTTP Verbindung zu unreal.epicgames.com:80 auf und
fordert per HTTP "/UpdateServer/utmaster.txt" an.
Die "utmaster.txt" Datei sieht folgendermassen aus:
UBrowser.UBrowserGSpyFact,MasterServerAddress=unreal.epicgames.com,MasterServerTCPPort=28900,Region=0,GameName=ut
UBrowser.UBrowserGSpyFact,MasterServerAddress=master0.gamespy.com,MasterServerTCPPort=28900,Region=0,GameName=ut

--

GET /UpdateServer/utircserver.txt HTTP/1.1\r\n
User-Agent: Unreal\r\n
Connection: close\r\n
Host: unreal.epicgames.com:80\r\n
\r\n

Die "utircserver.txt" Datei sieht folgendermassen aus:
irc.utchat.com


5.6. Master Server Traffic
--------------------------
(Master -> Client)

Sobald der Client mit dem Master verbunden ist schickt der Master folgende Meldungen:
\basic\\secure\wookie
\gamename\ut\location\0\validate\2/TYFMRc\final\
\list\\gamename\ut\final\
\ip\80.84.230.153:3334
\ip\...
...
\ip\...\final\

Die IPs werden per TCP Verbindung übertragen.
FIXME: Mehr über validate herausfinden.
\final\ scheint der Abschluss für die Übertragung zu sein.
Danach wird die Verbindung geschlossen.


--

7. Links
========

QStat - http://www.qstat.org
XQF - http://www.linuxgames.com/xqf/
Ethereal - http://www.ethereal.com
Q2 Network Protocol Specs - http://www.csse.monash.edu.au/~timf/bottim/q2net/q2network-0.03.html


Letzte Änderung: 2003-11-16 Andre' Schulz

(C) Copyright 2003 Ingo Rohlfs & Andre' Schulz
Released under GPL
